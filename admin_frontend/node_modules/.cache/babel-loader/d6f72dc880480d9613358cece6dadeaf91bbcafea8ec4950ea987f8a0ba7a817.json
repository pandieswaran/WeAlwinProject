{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pandi Eswaran\\\\projects\\\\Shopify\\\\admin_frontend\\\\src\\\\Pages\\\\SubCategoryAdd.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, Modal, Table } from 'react-bootstrap';\nimport Navigation from '../Components/Nav';\nimport Axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SubCategoryAdd() {\n  _s();\n  const navigate = useNavigate();\n  const [categories, setCategories] = useState([]);\n  const [subCategories, setSubCategories] = useState([]);\n  const [categoryId, setCategoryId] = useState('');\n  const [subCategory, setSubCategory] = useState('');\n  const [errors, setErrors] = useState({});\n  const [message, setMessage] = useState('');\n  const [showOtpModal, setShowOtpModal] = useState(false);\n  const [newCategoryName, setNewCategoryName] = useState('');\n  const [currentSubCategoryId, setCurrentSubCategoryId] = useState(null);\n\n  // Fetch categories from the backend\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await Axios.get('http://localhost:8000/category');\n        setCategories(response.data);\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    };\n    fetchCategories();\n  }, []);\n\n  // Fetch Subcategories from the backend\n  useEffect(() => {\n    const fetchSubCategories = async () => {\n      try {\n        const response = await Axios.get('http://localhost:8000/joinsubcategories');\n        setSubCategories(response.data);\n      } catch (error) {\n        console.error('Error fetching subcategories:', error);\n      }\n    };\n    fetchSubCategories();\n  }, []);\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n\n    // Validate form inputs\n    const newErrors = {};\n    if (!categoryId) newErrors.CategoryId = 'Category is required';\n    if (!subCategory) newErrors.SubCategory = 'Subcategory is required';\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    const body = {\n      CategoryId: categoryId,\n      SubCategory: subCategory\n    };\n    try {\n      const response = await Axios.post('http://localhost:8000/subcategory', body);\n      console.log('Form submitted successfully:', response.data);\n      setCategoryId('');\n      setSubCategory('');\n      navigate('/home');\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.message) {\n        setMessage(error.response.data.message);\n      } else {\n        setMessage('Error submitting form');\n      }\n    }\n  };\n  const handleUpdate = subCategoryId => {\n    setCurrentSubCategoryId(subCategoryId);\n    const categoryToUpdate = setSubCategories.find(category => category._id === categoryId);\n    if (categoryToUpdate) {\n      setNewCategoryName(categoryToUpdate.CategoryName); // Set the current category name in the modal input\n      setShowOtpModal(true); // Show modal for updating category name\n    }\n  };\n  const resetPasswordHandler = async () => {\n    try {\n      await Axios.put(`http://localhost:8000/category/${currentSubCategoryId}`, {\n        CategoryName: newCategoryName\n      });\n      console.log('Category updated successfully');\n      setShowOtpModal(false); // Close modal after successful update\n      setNewCategoryName(''); // Clear input field after update\n      // Refresh categories list\n      const response = await Axios.get('http://localhost:8000/category');\n      setCategories(response.data);\n    } catch (error) {\n      console.error('Error updating category:', error);\n      // Handle error updating category\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pcenter-form\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleFormSubmit,\n        className: \"pform\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-center\",\n          children: \"Add Sub Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"validationCategory\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            value: categoryId,\n            onChange: e => setCategoryId(e.target.value),\n            isInvalid: !!errors.CategoryId,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Category...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category._id,\n              children: category.CategoryName\n            }, category._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: errors.CategoryId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"validationSubCategory\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Sub Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: subCategory,\n            onChange: e => setSubCategory(e.target.value),\n            isInvalid: !!errors.SubCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: errors.SubCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mx-auto d-block\",\n          type: \"submit\",\n          children: \"Submit Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: showOtpModal,\n        onHide: () => setShowOtpModal(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Update Sub Category Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"validationCategory\",\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                name: \"Category\",\n                value: values.Category,\n                onChange: e => {\n                  handleChange(e);\n                  setSelectedCategory(e.target.value); // Update selected category\n                  setFieldValue('SubCategory', ''); // Reset SubCategory when Category changes\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Category...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 33\n                }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: category._id,\n                  children: category.CategoryName\n                }, category._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 37\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors.Category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formNewCategoryName\",\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"New Sub Category Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: newCategoryName,\n                onChange: e => setNewCategoryName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => setShowOtpModal(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: resetPasswordHandler,\n            children: \"Update Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Subcategory List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subcategory Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: subCategories.map(subcategory => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: subcategory.CategoryId ? subcategory.CategoryId.CategoryName : 'Loading...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: subcategory.SubCategory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleUpdate(subcategory._id),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this)]\n          }, subcategory._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(SubCategoryAdd, \"7jmSwJRAA5SnxccKFgYSOKRaGUQ=\", false, function () {\n  return [useNavigate];\n});\n_c = SubCategoryAdd;\nexport default SubCategoryAdd;\nvar _c;\n$RefreshReg$(_c, \"SubCategoryAdd\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","Modal","Table","Navigation","Axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","SubCategoryAdd","_s","navigate","categories","setCategories","subCategories","setSubCategories","categoryId","setCategoryId","subCategory","setSubCategory","errors","setErrors","message","setMessage","showOtpModal","setShowOtpModal","newCategoryName","setNewCategoryName","currentSubCategoryId","setCurrentSubCategoryId","fetchCategories","response","get","data","error","console","fetchSubCategories","handleFormSubmit","e","preventDefault","newErrors","CategoryId","SubCategory","Object","keys","length","body","post","log","handleUpdate","subCategoryId","categoryToUpdate","find","category","_id","CategoryName","resetPasswordHandler","put","children","fileName","_jsxFileName","lineNumber","columnNumber","className","noValidate","onSubmit","Group","controlId","Label","Control","as","value","onChange","target","isInvalid","map","Feedback","type","show","onHide","Header","closeButton","Title","Body","name","values","Category","handleChange","setSelectedCategory","setFieldValue","Footer","variant","onClick","striped","bordered","hover","subcategory","_c","$RefreshReg$"],"sources":["C:/Users/Pandi Eswaran/projects/Shopify/admin_frontend/src/Pages/SubCategoryAdd.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Modal, Table } from 'react-bootstrap';\r\nimport Navigation from '../Components/Nav';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction SubCategoryAdd() {\r\n    const navigate = useNavigate();\r\n    const [categories, setCategories] = useState([]);\r\n    const [subCategories, setSubCategories] = useState([]);\r\n    const [categoryId, setCategoryId] = useState('');\r\n    const [subCategory, setSubCategory] = useState('');\r\n    const [errors, setErrors] = useState({});\r\n    const [message, setMessage] = useState('');\r\n    const [showOtpModal, setShowOtpModal] = useState(false);\r\n    const [newCategoryName, setNewCategoryName] = useState('');\r\n    const [currentSubCategoryId, setCurrentSubCategoryId] = useState(null);\r\n\r\n    // Fetch categories from the backend\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n                const response = await Axios.get('http://localhost:8000/category');\r\n                setCategories(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching categories:', error);\r\n            }\r\n        };\r\n\r\n        fetchCategories();\r\n    }, []);\r\n\r\n    // Fetch Subcategories from the backend\r\n    useEffect(() => {\r\n        const fetchSubCategories = async () => {\r\n            try {\r\n                const response = await Axios.get('http://localhost:8000/joinsubcategories');\r\n                setSubCategories(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching subcategories:', error);\r\n            }\r\n        };\r\n\r\n        fetchSubCategories();\r\n    }, []);\r\n\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Validate form inputs\r\n        const newErrors = {};\r\n        if (!categoryId) newErrors.CategoryId = 'Category is required';\r\n        if (!subCategory) newErrors.SubCategory = 'Subcategory is required';\r\n\r\n        if (Object.keys(newErrors).length > 0) {\r\n            setErrors(newErrors);\r\n            return;\r\n        }\r\n\r\n        const body = {\r\n            CategoryId: categoryId,\r\n            SubCategory: subCategory,\r\n        };\r\n\r\n        try {\r\n            const response = await Axios.post('http://localhost:8000/subcategory', body);\r\n            console.log('Form submitted successfully:', response.data);\r\n            setCategoryId('');\r\n            setSubCategory('');\r\n            navigate('/home');\r\n        } catch (error) {\r\n            if (error.response && error.response.data && error.response.data.message) {\r\n                setMessage(error.response.data.message);\r\n            } else {\r\n                setMessage('Error submitting form');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleUpdate = (subCategoryId) => {\r\n        setCurrentSubCategoryId(subCategoryId);\r\n        const categoryToUpdate = setSubCategories.find(category => category._id === categoryId);\r\n        if (categoryToUpdate) {\r\n            setNewCategoryName(categoryToUpdate.CategoryName); // Set the current category name in the modal input\r\n            setShowOtpModal(true); // Show modal for updating category name\r\n        }\r\n    };\r\n\r\n    const resetPasswordHandler = async () => {\r\n        try {\r\n            await Axios.put(`http://localhost:8000/category/${currentSubCategoryId}`, {\r\n                CategoryName: newCategoryName\r\n            });\r\n            console.log('Category updated successfully');\r\n            setShowOtpModal(false); // Close modal after successful update\r\n            setNewCategoryName(''); // Clear input field after update\r\n            // Refresh categories list\r\n            const response = await Axios.get('http://localhost:8000/category');\r\n            setCategories(response.data);\r\n        } catch (error) {\r\n            console.error('Error updating category:', error);\r\n            // Handle error updating category\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Navigation />\r\n            <div className=\"pcenter-form\">\r\n                <Form noValidate onSubmit={handleFormSubmit} className=\"pform\">\r\n                    <h4 className=\"text-center\">Add Sub Category</h4>\r\n\r\n                    <Form.Group controlId=\"validationCategory\" className=\"mb-3\">\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control\r\n                            as=\"select\"\r\n                            value={categoryId}\r\n                            onChange={(e) => setCategoryId(e.target.value)}\r\n                            isInvalid={!!errors.CategoryId}\r\n                        >\r\n                            <option value=\"\">Select Category...</option>\r\n                            {categories.map((category) => (\r\n                                <option key={category._id} value={category._id}>\r\n                                    {category.CategoryName}\r\n                                </option>\r\n                            ))}\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {errors.CategoryId}\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"validationSubCategory\" className=\"mb-3\">\r\n                        <Form.Label>Sub Category</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            value={subCategory}\r\n                            onChange={(e) => setSubCategory(e.target.value)}\r\n                            isInvalid={!!errors.SubCategory}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {errors.SubCategory}\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Button className=\"mx-auto d-block\" type=\"submit\">Submit Form</Button>\r\n                    {message && <p>{message}</p>}\r\n                </Form>\r\n\r\n                <Modal show={showOtpModal} onHide={() => setShowOtpModal(false)}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Update Sub Category Name</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form> <Form.Group controlId=\"validationCategory\" className=\"mb-3\">\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"Category\"\r\n                                value={values.Category}\r\n                                onChange={(e) => {\r\n                                    handleChange(e);\r\n                                    setSelectedCategory(e.target.value); // Update selected category\r\n                                    setFieldValue('SubCategory', ''); // Reset SubCategory when Category changes\r\n                                }}\r\n                            >\r\n                                <option value=\"\">Select Category...</option>\r\n                                {categories.map(category => (\r\n                                    <option key={category._id} value={category._id}>\r\n                                        {category.CategoryName}\r\n                                    </option>\r\n                                ))}\r\n                            </Form.Control>\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {errors.Category}\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                            <Form.Group controlId=\"formNewCategoryName\" className=\"mb-3\">\r\n                                <Form.Label>New Sub Category Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    value={newCategoryName}\r\n                                    onChange={(e) => setNewCategoryName(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => setShowOtpModal(false)}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={resetPasswordHandler}>\r\n                            Update Name\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n\r\n            <div>\r\n                <h2>Subcategory List</h2>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Category Name</th>\r\n                            <th>Subcategory Name</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {subCategories.map((subcategory) => (\r\n                            <tr key={subcategory._id}>\r\n                                <td>{subcategory.CategoryId ? subcategory.CategoryId.CategoryName : 'Loading...'}</td>\r\n                                <td>{subcategory.SubCategory}</td>\r\n                                <td>\r\n                                    <Button onClick={() => handleUpdate(subcategory._id)}>Update</Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SubCategoryAdd;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}