{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pandi Eswaran\\\\projects\\\\Shopify\\\\admin_frontend\\\\src\\\\Pages\\\\SubCategoryAdd.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button, Modal, Table } from 'react-bootstrap';\nimport Navigation from '../Components/Nav';\nimport Axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SubCategoryAdd() {\n  _s();\n  const navigate = useNavigate();\n  const [categories, setCategories] = useState([]);\n  const [subCategories, setSubCategories] = useState([]);\n  const [categoryId, setCategoryId] = useState('');\n  const [subCategory, setSubCategory] = useState('');\n  // const [errors, setErrors] = useState({});\n  const [message, setMessage] = useState('');\n  const [showOtpModal, setShowOtpModal] = useState(false);\n  const [newCategoryId, setNewCategoryId] = useState(''); // For new category selection\n  const [newSubCategoryName, setNewSubCategoryName] = useState(''); // For new subcategory name\n  const [currentSubCategoryId, setCurrentSubCategoryId] = useState(null);\n\n  // Fetch categories from the backend\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await Axios.get('http://localhost:8000/category');\n        setCategories(response.data);\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    };\n    fetchCategories();\n  }, []);\n\n  // Fetch Subcategories from the backend\n  useEffect(() => {\n    const fetchSubCategories = async () => {\n      try {\n        const response = await Axios.get('http://localhost:8000/joinsubcategories');\n        setSubCategories(response.data);\n      } catch (error) {\n        console.error('Error fetching subcategories:', error);\n      }\n    };\n    fetchSubCategories();\n  }, []);\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    // Validate form inputs\n    const newErrors = {};\n    if (!categoryId) newErrors.CategoryId = 'Category is required';\n    if (!subCategory) newErrors.SubCategory = 'Subcategory is required';\n    const body = {\n      CategoryId: categoryId,\n      SubCategory: subCategory\n    };\n    try {\n      const response = await Axios.post('http://localhost:8000/subcategory', body);\n      console.log('Form submitted successfully:', response.data);\n      setCategoryId('');\n      setSubCategory('');\n      navigate('/home');\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.message) {\n        setMessage(error.response.data.message);\n      } else {\n        setMessage('Error submitting form');\n      }\n    }\n  };\n  const handleUpdate = subCategoryId => {\n    setCurrentSubCategoryId(subCategoryId);\n    const subCategoryToUpdate = subCategories.find(sub => sub._id === subCategoryId);\n    if (subCategoryToUpdate) {\n      setNewCategoryId(subCategoryToUpdate.CategoryId._id); // Ensure CategoryId is being set correctly\n      setNewSubCategoryName(subCategoryToUpdate.SubCategory);\n      setShowOtpModal(true);\n    }\n  };\n\n  // const resetPasswordHandler = async () => {\n  //     try {\n  //         await Axios.put(`http://localhost:8000/subcategory/${currentSubCategoryId}`, {\n  //             CategoryId: newCategoryId,\n  //             SubCategory: newSubCategoryName\n  //         });\n  //         console.log('Subcategory updated successfully');\n  //         setShowOtpModal(false); // Close modal after successful update\n  //         setNewCategoryId(''); // Clear category selection after update\n  //         setNewSubCategoryName(''); // Clear subcategory name after update\n\n  //         // Refresh categories and subcategories list\n  //         const categoriesResponse = await Axios.get('http://localhost:8000/category');\n  //         setCategories(categoriesResponse.data);\n\n  //         const subCategoriesResponse = await Axios.get('http://localhost:8000/joinsubcategories');\n  //         setSubCategories(subCategoriesResponse.data);\n  //     } catch (error) {\n  //         console.error('Error updating subcategory:', error);\n  //         // Handle error updating subcategory\n  //     }\n  // };   \n\n  const resetPasswordHandler = async () => {\n    try {\n      const response = await Axios.put(`http://localhost:8000/subcategory/${currentSubCategoryId}`, {\n        CategoryId: newCategoryId,\n        SubCategory: newSubCategoryName\n      });\n      console.log('Subcategory updated successfully:', response.data);\n      setShowOtpModal(false);\n      setNewSubCategoryName('');\n      setCategoryId('');\n      const responseSubCategories = await Axios.get('http://localhost:8000/joinsubcategories');\n      setSubCategories(responseSubCategories.data);\n    } catch (error) {\n      console.error('Error updating subcategory:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pcenter-form\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        onSubmit: handleFormSubmit,\n        className: \"pform\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"text-center\",\n          children: \"Add Sub Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"validationCategory\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            value: categoryId,\n            onChange: e => setCategoryId(e.target.value),\n            isInvalid: !!errors.CategoryId,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Category...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category._id,\n              children: category.CategoryName\n            }, category._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: errors.CategoryId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"validationSubCategory\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Sub Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: subCategory,\n            onChange: e => setSubCategory(e.target.value),\n            isInvalid: !!errors.SubCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: errors.SubCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mx-auto d-block\",\n          type: \"submit\",\n          children: \"Submit Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: showOtpModal,\n        onHide: () => setShowOtpModal(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Update Category and Subcategory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"validationCategory\",\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                value: newCategoryId,\n                onChange: e => setNewCategoryId(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select Category...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 37\n                }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: category._id,\n                  children: category.CategoryName\n                }, category._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 41\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formNewSubCategoryName\",\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"New Sub Category Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                value: newSubCategoryName,\n                onChange: e => setNewSubCategoryName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => setShowOtpModal(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: resetPasswordHandler,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Subcategory List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subcategory Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: subCategories.map(subcategory => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: subcategory.CategoryId ? subcategory.CategoryId.CategoryName : 'Loading...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: subcategory.SubCategory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleUpdate(subcategory._id),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this)]\n          }, subcategory._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(SubCategoryAdd, \"4TcaRIEufmQ0bEq3TVYQlED9YRk=\", false, function () {\n  return [useNavigate];\n});\n_c = SubCategoryAdd;\nexport default SubCategoryAdd;\nvar _c;\n$RefreshReg$(_c, \"SubCategoryAdd\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","Modal","Table","Navigation","Axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","SubCategoryAdd","_s","navigate","categories","setCategories","subCategories","setSubCategories","categoryId","setCategoryId","subCategory","setSubCategory","message","setMessage","showOtpModal","setShowOtpModal","newCategoryId","setNewCategoryId","newSubCategoryName","setNewSubCategoryName","currentSubCategoryId","setCurrentSubCategoryId","fetchCategories","response","get","data","error","console","fetchSubCategories","handleFormSubmit","e","preventDefault","newErrors","CategoryId","SubCategory","body","post","log","handleUpdate","subCategoryId","subCategoryToUpdate","find","sub","_id","resetPasswordHandler","put","responseSubCategories","children","fileName","_jsxFileName","lineNumber","columnNumber","className","noValidate","onSubmit","Group","controlId","Label","Control","as","value","onChange","target","isInvalid","errors","map","category","CategoryName","Feedback","type","show","onHide","Header","closeButton","Title","Body","Footer","variant","onClick","striped","bordered","hover","subcategory","_c","$RefreshReg$"],"sources":["C:/Users/Pandi Eswaran/projects/Shopify/admin_frontend/src/Pages/SubCategoryAdd.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Modal, Table } from 'react-bootstrap';\r\nimport Navigation from '../Components/Nav';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction SubCategoryAdd() {\r\n    const navigate = useNavigate();\r\n    const [categories, setCategories] = useState([]);\r\n    const [subCategories, setSubCategories] = useState([]);\r\n    const [categoryId, setCategoryId] = useState('');\r\n    const [subCategory, setSubCategory] = useState('');\r\n    // const [errors, setErrors] = useState({});\r\n    const [message, setMessage] = useState('');\r\n    const [showOtpModal, setShowOtpModal] = useState(false);\r\n    const [newCategoryId, setNewCategoryId] = useState(''); // For new category selection\r\n    const [newSubCategoryName, setNewSubCategoryName] = useState(''); // For new subcategory name\r\n    const [currentSubCategoryId, setCurrentSubCategoryId] = useState(null);\r\n\r\n    // Fetch categories from the backend\r\n    useEffect(() => {\r\n        const fetchCategories = async () => {\r\n            try {\r\n                const response = await Axios.get('http://localhost:8000/category');\r\n                setCategories(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching categories:', error);\r\n            }\r\n        };\r\n        fetchCategories();\r\n    }, []);\r\n\r\n    // Fetch Subcategories from the backend\r\n    useEffect(() => {\r\n        const fetchSubCategories = async () => {\r\n            try {\r\n                const response = await Axios.get('http://localhost:8000/joinsubcategories');\r\n                setSubCategories(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching subcategories:', error);\r\n            }\r\n        };\r\n        fetchSubCategories();\r\n    }, []);\r\n\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // Validate form inputs\r\n        const newErrors = {};\r\n        if (!categoryId) newErrors.CategoryId = 'Category is required';\r\n        if (!subCategory) newErrors.SubCategory = 'Subcategory is required';\r\n\r\n     \r\n\r\n        const body = {\r\n            CategoryId: categoryId,\r\n            SubCategory: subCategory,\r\n        };\r\n\r\n        try {\r\n            const response = await Axios.post('http://localhost:8000/subcategory', body);\r\n            console.log('Form submitted successfully:', response.data);\r\n            setCategoryId('');\r\n            setSubCategory('');\r\n            navigate('/home');\r\n        } catch (error) {\r\n            if (error.response && error.response.data && error.response.data.message) {\r\n                setMessage(error.response.data.message);\r\n            } else {\r\n                setMessage('Error submitting form');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleUpdate = (subCategoryId) => {\r\n        setCurrentSubCategoryId(subCategoryId);\r\n        const subCategoryToUpdate = subCategories.find(sub => sub._id === subCategoryId);\r\n        if (subCategoryToUpdate) {\r\n            setNewCategoryId(subCategoryToUpdate.CategoryId._id); // Ensure CategoryId is being set correctly\r\n            setNewSubCategoryName(subCategoryToUpdate.SubCategory);\r\n            setShowOtpModal(true);\r\n        }\r\n    };\r\n\r\n    // const resetPasswordHandler = async () => {\r\n    //     try {\r\n    //         await Axios.put(`http://localhost:8000/subcategory/${currentSubCategoryId}`, {\r\n    //             CategoryId: newCategoryId,\r\n    //             SubCategory: newSubCategoryName\r\n    //         });\r\n    //         console.log('Subcategory updated successfully');\r\n    //         setShowOtpModal(false); // Close modal after successful update\r\n    //         setNewCategoryId(''); // Clear category selection after update\r\n    //         setNewSubCategoryName(''); // Clear subcategory name after update\r\n\r\n    //         // Refresh categories and subcategories list\r\n    //         const categoriesResponse = await Axios.get('http://localhost:8000/category');\r\n    //         setCategories(categoriesResponse.data);\r\n\r\n    //         const subCategoriesResponse = await Axios.get('http://localhost:8000/joinsubcategories');\r\n    //         setSubCategories(subCategoriesResponse.data);\r\n    //     } catch (error) {\r\n    //         console.error('Error updating subcategory:', error);\r\n    //         // Handle error updating subcategory\r\n    //     }\r\n    // };   \r\n\r\n    const resetPasswordHandler = async () => {\r\n        try {\r\n    \r\n            const response = await Axios.put(`http://localhost:8000/subcategory/${currentSubCategoryId}`, {\r\n                CategoryId: newCategoryId,\r\n                SubCategory: newSubCategoryName\r\n            });\r\n            console.log('Subcategory updated successfully:', response.data);\r\n            setShowOtpModal(false);\r\n            setNewSubCategoryName('');\r\n            setCategoryId('');\r\n            const responseSubCategories = await Axios.get('http://localhost:8000/joinsubcategories');\r\n            setSubCategories(responseSubCategories.data);\r\n        } catch (error) {\r\n            console.error('Error updating subcategory:', error);\r\n        }\r\n    };\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Navigation />\r\n            <div className=\"pcenter-form\">\r\n                <Form noValidate onSubmit={handleFormSubmit} className=\"pform\">\r\n                    <h4 className=\"text-center\">Add Sub Category</h4>\r\n\r\n                    <Form.Group controlId=\"validationCategory\" className=\"mb-3\">\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control\r\n                            as=\"select\"\r\n                            value={categoryId}\r\n                            onChange={(e) => setCategoryId(e.target.value)}\r\n                            isInvalid={!!errors.CategoryId}\r\n                        >\r\n                            <option value=\"\">Select Category...</option>\r\n                            {categories.map((category) => (\r\n                                <option key={category._id} value={category._id}>\r\n                                    {category.CategoryName}\r\n                                </option>\r\n                            ))}\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {errors.CategoryId}\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"validationSubCategory\" className=\"mb-3\">\r\n                        <Form.Label>Sub Category</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            value={subCategory}\r\n                            onChange={(e) => setSubCategory(e.target.value)}\r\n                            isInvalid={!!errors.SubCategory}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {errors.SubCategory}\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Button className=\"mx-auto d-block\" type=\"submit\">Submit Form</Button>\r\n                    {message && <p>{message}</p>}\r\n                </Form>\r\n\r\n                <Modal show={showOtpModal} onHide={() => setShowOtpModal(false)}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Update Category and Subcategory</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Form.Group controlId=\"validationCategory\" className=\"mb-3\">\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    value={newCategoryId}\r\n                                    onChange={(e) => setNewCategoryId(e.target.value)}\r\n                                >\r\n                                    <option value=\"\">Select Category...</option>\r\n                                    {categories.map(category => (\r\n                                        <option key={category._id} value={category._id}>\r\n                                            {category.CategoryName}\r\n                                        </option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formNewSubCategoryName\" className=\"mb-3\">\r\n                                <Form.Label>New Sub Category Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    value={newSubCategoryName}\r\n                                    onChange={(e) => setNewSubCategoryName(e.target.value)}\r\n                                />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => setShowOtpModal(false)}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={resetPasswordHandler}>\r\n                            Update\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n\r\n            <div>\r\n                <h2>Subcategory List</h2>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Category Name</th>\r\n                            <th>Subcategory Name</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {subCategories.map((subcategory) => (\r\n                            <tr key={subcategory._id}>\r\n                                <td>{subcategory.CategoryId ? subcategory.CategoryId.CategoryName : 'Loading...'}</td>\r\n                                <td>{subcategory.SubCategory}</td>\r\n                                <td>\r\n                                    <Button onClick={() => handleUpdate(subcategory._id)}>Update</Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SubCategoryAdd;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}