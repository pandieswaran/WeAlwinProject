{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { Button, Form } from 'react-bootstrap';\n// import Navigation from '../Components/Nav';\n// import '../Pages/ProductAdd.css';\n// import Axios from 'axios';\n// import Table from 'react-bootstrap/Table';\n\n// function CategoryAdd() {\n//   const [categoryName, setCategoryName] = useState('');\n//   const [error, setError] = useState('');\n\n//   const handleInputChange = (event) => {\n//     setCategoryName(event.target.value);\n//     console.log(categoryName)\n//   };\n\n//   const handleFormSubmit = async (event) => {\n//     event.preventDefault();\n\n//     try {\n//       const response = await Axios.post('http://localhost:8000/createCategory', {\n//         CategoryName: categoryName\n//       });\n//       console.log('Form submitted successfully:', response.data);\n//       setCategoryName(''); // Clear input field after successful submission\n//       setError(''); // Clear any previous error\n//     } catch (error) {\n//       console.error('Error submitting form:', error);\n//       setError('Error submitting form. Please try again.'); // Generic error message\n//     }\n//   };\n\n//   //View The Category Name:\n//   const [category, setCategory] = useState([]);\n\n//   useEffect(() => {\n//       const fetchCategory = async () => {\n//           try {\n//               const response = await Axios.get('http://localhost:8000/category'); // Endpoint to fetch category\n//               setCategory(response.data); // Set Category state with fetched data\n//           } catch (error) {\n//               console.error('Error fetching category:', error);\n//           }\n//       };\n\n//       fetchCategory();\n//   }, []);\n\n//   const handleUpdate = async (categoryid) => {\n//     console.log(categoryid)\n//     try {\n//         // const response = await Axios.get(`http://localhost:8000/category/${categoryid}`);\n//         // const categoryData = response.data; // Assuming response.data contains product details\n//         // console.log(categoryData)\n//     } catch (error) {\n//         console.error('Error fetching product for update:', error);\n//     }\n// };\n\n//   return (\n//     <>\n//       <Navigation />\n//       <div className=\"pcenter-form\">\n//         <Form noValidate onSubmit={handleFormSubmit} className=\"pform\">\n//           <h4 className=\"text-center\">Category Add Form</h4>\n//           <Form.Group controlId=\"validationCategoryName\" className=\"mb-3\">\n//             <Form.Label>Category Name</Form.Label>\n//             <Form.Control\n//               type=\"text\"\n//               name=\"CategoryName\"\n//               value={categoryName}\n//               onChange={handleInputChange}\n//               required\n//             />\n//           </Form.Group>\n//           {error && <div className=\"text-danger mb-3\">{error}</div>}\n//           <Button className=\"mx-auto d-block\" type=\"submit\">Submit Form</Button>\n//         </Form>\n//       </div>\n//       <div>\n//       <div>\n//             <Navigation />\n//             <h2\n//             >Category List</h2>\n//             <Table striped bordered hover>\n//                 <thead>\n//                     <tr>\n//                         <th>Category Name</th>\n//                         <th></th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {category.map(category => (\n//                         <tr key={category._id}>\n//                             <td>{category.CategoryName}</td>\n//                             <td>\n//                                 <Button onClick={() => handleUpdate(category._id)}>Update</Button>\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </Table>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default CategoryAdd;\n\n// import React, { useState, useEffect } from 'react';\n// import { Button, Form } from 'react-bootstrap';\n// import Navigation from '../Components/Nav';\n// import '../Pages/ProductAdd.css';\n// import Axios from 'axios';\n// import Table from 'react-bootstrap/Table';\n\n// function CategoryAdd() {\n//   const [categoryName, setCategoryName] = useState('');\n//   const [error, setError] = useState('');\n//   const [categories, setCategories] = useState([]);\n//   const [isUpdateMode, setIsUpdateMode] = useState(false);\n//   const [currentCategoryId, setCurrentCategoryId] = useState(null);\n\n//   // Fetch categories on component mount\n//   useEffect(() => {\n//     fetchCategories();\n//   }, []);\n\n//   const fetchCategories = async () => {\n//     try {\n//       const response = await Axios.get('http://localhost:8000/category');\n//       setCategories(response.data);\n//     } catch (error) {\n//       console.error('Error fetching categories:', error);\n//     }\n//   };\n\n//   const handleInputChange = (event) => {\n//     setCategoryName(event.target.value);\n//   };\n\n//   const handleFormSubmit = async (event) => {\n//     event.preventDefault();\n\n//     try {\n//       if (isUpdateMode && currentCategoryId) {\n//         // Update existing category\n//         await Axios.put(`http://localhost:8000/category/${currentCategoryId}`, {\n//           CategoryName: categoryName\n//         });\n//         console.log('Category updated successfully');\n//         setIsUpdateMode(false); // Exit update mode\n//         setCurrentCategoryId(null); // Clear current category ID\n//       } else {\n//         // Add new category\n//         await Axios.post('http://localhost:8000/createCategory', {\n//           CategoryName: categoryName\n//         });\n//         console.log('Category added successfully');\n//       }\n//       setCategoryName(''); // Clear input field after submission\n//       setError(''); // Clear any previous error\n//       fetchCategories(); // Refresh categories list\n//     } catch (error) {\n//       console.error('Error submitting form:', error);\n//       setError('Error submitting form. Please try again.'); // Generic error message\n//     }\n//   };\n\n//   const handleUpdate = (categoryId) => {\n//     // Set current category for update\n//     const categoryToUpdate = categories.find(category => category._id === categoryId);\n//     if (categoryToUpdate) {\n//       setCategoryName(categoryToUpdate.CategoryName);\n//       setIsUpdateMode(true);\n//       setCurrentCategoryId(categoryId);\n//     }\n//   };\n\n//   return (\n//     <>\n//       <Navigation />\n//       <div className=\"pcenter-form\">\n//         <Form noValidate onSubmit={handleFormSubmit} className=\"pform\">\n//           <h4 className=\"text-center\">{isUpdateMode ? 'Update Category' : 'Add Category'}</h4>\n//           <Form.Group controlId=\"validationCategoryName\" className=\"mb-3\">\n//             <Form.Label>Category Name</Form.Label>\n//             <Form.Control\n//               type=\"text\"\n//               name=\"CategoryName\"\n//               value={categoryName}\n//               onChange={handleInputChange}\n//               required\n//             />\n//           </Form.Group>\n//           {error && <div className=\"text-danger mb-3\">{error}</div>}\n//           <Button className=\"mx-auto d-block\" type=\"submit\">\n//             {isUpdateMode ? 'Update Category' : 'Add Category'}\n//           </Button>\n//         </Form>\n//       </div>\n//       <div>\n//         <h2>Category List</h2>\n//         <Table striped bordered hover>\n//           <thead>\n//             <tr>\n//               <th>Category Name</th>\n//               <th>Actions</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {categories.map(category => (\n//               <tr key={category._id}>\n//                 <td>{category.CategoryName}</td>\n//                 <td>\n//                   <Button onClick={() => handleUpdate(category._id)}>Update</Button>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </Table>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default CategoryAdd;","map":{"version":3,"names":[],"sources":["C:/Users/Pandi Eswaran/projects/Shopify/admin_frontend/src/Pages/CategoryAdd.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Button, Form } from 'react-bootstrap';\r\n// import Navigation from '../Components/Nav';\r\n// import '../Pages/ProductAdd.css';\r\n// import Axios from 'axios';\r\n// import Table from 'react-bootstrap/Table';\r\n\r\n// function CategoryAdd() {\r\n//   const [categoryName, setCategoryName] = useState('');\r\n//   const [error, setError] = useState('');\r\n\r\n//   const handleInputChange = (event) => {\r\n//     setCategoryName(event.target.value);\r\n//     console.log(categoryName)\r\n//   };\r\n\r\n//   const handleFormSubmit = async (event) => {\r\n//     event.preventDefault();\r\n\r\n//     try {\r\n//       const response = await Axios.post('http://localhost:8000/createCategory', {\r\n//         CategoryName: categoryName\r\n//       });\r\n//       console.log('Form submitted successfully:', response.data);\r\n//       setCategoryName(''); // Clear input field after successful submission\r\n//       setError(''); // Clear any previous error\r\n//     } catch (error) {\r\n//       console.error('Error submitting form:', error);\r\n//       setError('Error submitting form. Please try again.'); // Generic error message\r\n//     }\r\n//   };\r\n\r\n\r\n//   //View The Category Name:\r\n//   const [category, setCategory] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//       const fetchCategory = async () => {\r\n//           try {\r\n//               const response = await Axios.get('http://localhost:8000/category'); // Endpoint to fetch category\r\n//               setCategory(response.data); // Set Category state with fetched data\r\n//           } catch (error) {\r\n//               console.error('Error fetching category:', error);\r\n//           }\r\n//       };\r\n\r\n//       fetchCategory();\r\n//   }, []);\r\n\r\n//   const handleUpdate = async (categoryid) => {\r\n//     console.log(categoryid)\r\n//     try {\r\n//         // const response = await Axios.get(`http://localhost:8000/category/${categoryid}`);\r\n//         // const categoryData = response.data; // Assuming response.data contains product details\r\n//         // console.log(categoryData)\r\n//     } catch (error) {\r\n//         console.error('Error fetching product for update:', error);\r\n//     }\r\n// };\r\n\r\n//   return (\r\n//     <>\r\n//       <Navigation />\r\n//       <div className=\"pcenter-form\">\r\n//         <Form noValidate onSubmit={handleFormSubmit} className=\"pform\">\r\n//           <h4 className=\"text-center\">Category Add Form</h4>\r\n//           <Form.Group controlId=\"validationCategoryName\" className=\"mb-3\">\r\n//             <Form.Label>Category Name</Form.Label>\r\n//             <Form.Control\r\n//               type=\"text\"\r\n//               name=\"CategoryName\"\r\n//               value={categoryName}\r\n//               onChange={handleInputChange}\r\n//               required\r\n//             />\r\n//           </Form.Group>\r\n//           {error && <div className=\"text-danger mb-3\">{error}</div>}\r\n//           <Button className=\"mx-auto d-block\" type=\"submit\">Submit Form</Button>\r\n//         </Form>\r\n//       </div>\r\n//       <div>\r\n//       <div>\r\n//             <Navigation />\r\n//             <h2\r\n//             >Category List</h2>\r\n//             <Table striped bordered hover>\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>Category Name</th>\r\n//                         <th></th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {category.map(category => (\r\n//                         <tr key={category._id}>\r\n//                             <td>{category.CategoryName}</td>\r\n//                             <td>\r\n//                                 <Button onClick={() => handleUpdate(category._id)}>Update</Button>\r\n//                             </td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </Table>\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default CategoryAdd;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Button, Form } from 'react-bootstrap';\r\n// import Navigation from '../Components/Nav';\r\n// import '../Pages/ProductAdd.css';\r\n// import Axios from 'axios';\r\n// import Table from 'react-bootstrap/Table';\r\n\r\n// function CategoryAdd() {\r\n//   const [categoryName, setCategoryName] = useState('');\r\n//   const [error, setError] = useState('');\r\n//   const [categories, setCategories] = useState([]);\r\n//   const [isUpdateMode, setIsUpdateMode] = useState(false);\r\n//   const [currentCategoryId, setCurrentCategoryId] = useState(null);\r\n\r\n//   // Fetch categories on component mount\r\n//   useEffect(() => {\r\n//     fetchCategories();\r\n//   }, []);\r\n\r\n//   const fetchCategories = async () => {\r\n//     try {\r\n//       const response = await Axios.get('http://localhost:8000/category');\r\n//       setCategories(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching categories:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleInputChange = (event) => {\r\n//     setCategoryName(event.target.value);\r\n//   };\r\n\r\n//   const handleFormSubmit = async (event) => {\r\n//     event.preventDefault();\r\n\r\n//     try {\r\n//       if (isUpdateMode && currentCategoryId) {\r\n//         // Update existing category\r\n//         await Axios.put(`http://localhost:8000/category/${currentCategoryId}`, {\r\n//           CategoryName: categoryName\r\n//         });\r\n//         console.log('Category updated successfully');\r\n//         setIsUpdateMode(false); // Exit update mode\r\n//         setCurrentCategoryId(null); // Clear current category ID\r\n//       } else {\r\n//         // Add new category\r\n//         await Axios.post('http://localhost:8000/createCategory', {\r\n//           CategoryName: categoryName\r\n//         });\r\n//         console.log('Category added successfully');\r\n//       }\r\n//       setCategoryName(''); // Clear input field after submission\r\n//       setError(''); // Clear any previous error\r\n//       fetchCategories(); // Refresh categories list\r\n//     } catch (error) {\r\n//       console.error('Error submitting form:', error);\r\n//       setError('Error submitting form. Please try again.'); // Generic error message\r\n//     }\r\n//   };\r\n\r\n//   const handleUpdate = (categoryId) => {\r\n//     // Set current category for update\r\n//     const categoryToUpdate = categories.find(category => category._id === categoryId);\r\n//     if (categoryToUpdate) {\r\n//       setCategoryName(categoryToUpdate.CategoryName);\r\n//       setIsUpdateMode(true);\r\n//       setCurrentCategoryId(categoryId);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Navigation />\r\n//       <div className=\"pcenter-form\">\r\n//         <Form noValidate onSubmit={handleFormSubmit} className=\"pform\">\r\n//           <h4 className=\"text-center\">{isUpdateMode ? 'Update Category' : 'Add Category'}</h4>\r\n//           <Form.Group controlId=\"validationCategoryName\" className=\"mb-3\">\r\n//             <Form.Label>Category Name</Form.Label>\r\n//             <Form.Control\r\n//               type=\"text\"\r\n//               name=\"CategoryName\"\r\n//               value={categoryName}\r\n//               onChange={handleInputChange}\r\n//               required\r\n//             />\r\n//           </Form.Group>\r\n//           {error && <div className=\"text-danger mb-3\">{error}</div>}\r\n//           <Button className=\"mx-auto d-block\" type=\"submit\">\r\n//             {isUpdateMode ? 'Update Category' : 'Add Category'}\r\n//           </Button>\r\n//         </Form>\r\n//       </div>\r\n//       <div>\r\n//         <h2>Category List</h2>\r\n//         <Table striped bordered hover>\r\n//           <thead>\r\n//             <tr>\r\n//               <th>Category Name</th>\r\n//               <th>Actions</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {categories.map(category => (\r\n//               <tr key={category._id}>\r\n//                 <td>{category.CategoryName}</td>\r\n//                 <td>\r\n//                   <Button onClick={() => handleUpdate(category._id)}>Update</Button>\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </Table>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default CategoryAdd;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}